{"ast":null,"code":"var _jsxFileName = \"/Users/paulo/Desktop/OPEN FULL STACK/part1/1.3 to 1.5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClick = feedback => {\n  if (feedback === 'good') {\n    console.log(feedback);\n    setGood(good + 1);\n    setClicks(clicks + 1);\n  } else if (feedback === 'neutral') {\n    setNeutral(good + 1);\n    setClicks(clicks + 1);\n  }\n};\n\nconst Button = ({\n  text,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleClick(text),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [clicks, setClicks] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"yguI5x8Njop+6kxJcYv8lror2X4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/paulo/Desktop/OPEN FULL STACK/part1/1.3 to 1.5/src/App.js"],"names":["React","useState","handleClick","feedback","console","log","setGood","good","setClicks","clicks","setNeutral","Button","text","App","neutral","bad","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC/B,MAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,IAAAA,OAAO,CAACC,IAAI,GAAG,CAAR,CAAP;AACAC,IAAAA,SAAS,CAACC,MAAM,GAAG,CAAV,CAAT;AACA,GAJD,MAIO,IAAIN,QAAQ,KAAK,SAAjB,EAA4B;AAClCO,IAAAA,UAAU,CAACH,IAAI,GAAG,CAAR,CAAV;AACAC,IAAAA,SAAS,CAACC,MAAM,GAAG,CAAV,CAAT;AACA;AACD,CATD;;AAWA,MAAME,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQV,EAAAA;AAAR,CAAD,KAA2B;AACzC,sBAAO;AAAQ,IAAA,OAAO,EAAE,MAAMA,WAAW,CAACU,IAAD,CAAlC;AAAA,cAA2CA;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD;;KAAMD,M;;AAIN,MAAME,GAAG,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACN,IAAD,EAAOD,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUJ,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACQ,MAAD,EAASD,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,WAAW,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAfD;;GAAMW,G;;MAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst handleClick = feedback => {\n\tif (feedback === 'good') {\n\t\tconsole.log(feedback)\n\t\tsetGood(good + 1)\n\t\tsetClicks(clicks + 1)\n\t} else if (feedback === 'neutral') {\n\t\tsetNeutral(good + 1)\n\t\tsetClicks(clicks + 1)\n\t}\n}\n\nconst Button = ({ text, handleClick }) => {\n\treturn <button onClick={() => handleClick(text)}>{text}</button>\n}\n\nconst App = () => {\n\t// save clicks of each button to its own state\n\tconst [good, setGood] = useState(0)\n\tconst [neutral, setNeutral] = useState(0)\n\tconst [bad, setBad] = useState(0)\n\tconst [clicks, setClicks] = useState(0)\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>give feedback</h1>\n\t\t\t<Button text=\"good\" handleClick={handleClick} />\n\t\t\t<Button text=\"neutral\" />\n\t\t\t<Button text=\"bad\" />\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}